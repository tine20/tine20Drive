name: Docker Image CI

on: [push]

jobs:

  build-windows:
    name: Windows
    runs-on: windows-latest
    strategy:
        matrix:
            target: ["windows-msvc2017_32-cl", "windows-msvc2017_64-cl"]
    env:
      WORKSPACE: ${{ github.workspace }}
      CRAFT: C:/CraftMaster/${{ matrix.target }}/craft/bin/craft.py

    steps:
    - name: Check out source code
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: true

    - name: Clone CraftMaster
      run: git clone --depth=1 https://invent.kde.org/kde/craftmaster.git C:/CraftMaster/CraftMaster

    - name: Configure CraftMaster
      run: py C:/CraftMaster/CraftMaster/CraftMaster.py --config $env:WORKSPACE/.craft.ini --variables "WORKSPACE=$env:WORKSPACE"

    - name: Craft unshelve
      run: py $env:CRAFT --unshelve $env:WORKSPACE/.craft.shelf

    - name: Install NSIS
      run: py $env:CRAFT dev-utils/nsis

    - name: Install dependencies
      run: py $env:CRAFT --install-deps tine20drive

    - name: Build
      run: py $env:CRAFT --no-cache --src-dir $env:WORKSPACE tine20drive

    - name: Run tests
      run: py $env:CRAFT --no-cache --src-dir $env:WORKSPACE --test tine20drive

    - name: Package
      run: py $env:CRAFT --no-cache --src-dir $env:WORKSPACE --options [Packager]PackageType=NullsoftInstallerPackager --package tine20drive

    - name: Update shelf
      run: |
        py $env:CRAFT --shelve $env:WORKSPACE/.craft.shelf
        Copy-Item $env:WORKSPACE/.craft.shelf $env:WORKSPACE/binaries/

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: Windows
        path: ${{ github.workspace }}/binaries/*.exe

  build-mac:

    runs-on: macos-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Import Code-Signing Certificates
      uses: Apple-Actions/import-codesign-certs@v1
      with: 
        p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
        p12-password: ${{ secrets.CERTIFICATES_P12_PASSWORD }}
    - name: Git submodule update
      run: | 
        git submodule init
        git submodule update
    - name: Install the package
      run: | 
        brew tap owncloud/owncloud
        brew install qt5
        brew install cmake
        brew install $(brew deps owncloud-client)
        brew update
        brew cask install packages
        sudo su -
        bash $GITHUB_WORKSPACE/ci-script/mac_install_sparkle.sh
        sudo xcode-select -s /Applications/Xcode.app/Contents/Developer 
    - name: Build the package
      run: |
        mkdir build && cd build
        cmake -DCMAKE_PREFIX_PATH=/usr/local/opt/qt5 -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/install/ -DNO_SHIBBOLETH=1 ..
        sudo make install
        sudo make macdeployqt
        sudo bash $GITHUB_WORKSPACE/admin/osx/sign_app.sh $GITHUB_WORKSPACE/install/tine20drive.app "${{ secrets.DEVELOPER_ID_APPLICATION }}" "${{ secrets.TEAM_IDENTITY }}"
        sudo bash admin/osx/create_mac.sh $GITHUB_WORKSPACE/install/ $PWD "${{ secrets.DEVELOPER_ID_INSTALLER }}" "${{ secrets.APPLE_ID_MAIL }}" "${{ secrets.APPLE_APP_PASSWORD }}" "${{ secrets.ASC_PROVIDER }}"        
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: mac
        path: ./install/*.pkg
    
    - name: Make Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        body_path: ./.github/release_template_MW.md
        files: |
          ./install/*.pkg
          ./install/*.tbz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
